<UserControl x:Class="HotelResFE.Views.HotelDetails"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HotelResFE.Views"
             xmlns:ViewModels="clr-namespace:HotelResFE.ViewModels"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             >
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="1">
            <!--<TextBlock Text="Välj aktuella veckor för att se vilka rumsstorlekar är lediga"/>-->
            <!--Vi tänker nog faktiskt bakvänt: Välj ett rum, se när rummen är lediga.-->
            <!--<RadioButton GroupName="Rbns" Content="Single Room" IsChecked="{Binding RbnSingleRoomChecked}"/>
            <RadioButton GroupName="Rbns" Content="Double Room" IsChecked="{Binding RbnDoubleRoomChecked}"/>
            <RadioButton GroupName="Rbns" Content="Suite" IsChecked="{Binding RbnSuiteChecked}" />-->

            <RadioButton Content="Single" GroupName="Rbns" IsChecked="{Binding ValueAs0, Mode=TwoWay}" />
            <RadioButton Content="Double" GroupName="Rbns" IsChecked="{Binding ValueAs1, Mode=TwoWay}" />
            <RadioButton Content="Suite" GroupName="Rbns" IsChecked="{Binding ValueAs2, Mode=TwoWay}" />
            <Label Content="Date of arrival: "/>
            <DatePicker DisplayDateStart="{Binding StartDate}"
                        DisplayDateEnd="{Binding EndDate}"
                        
                        SelectedDate="{Binding SelectedStartDate, Mode=OneWayToSource}">
                <DatePicker.CalendarStyle>
                    <Style TargetType="Calendar">
                        <Setter Property="CalendarDayButtonStyle">
                            <Setter.Value>
                                <Style TargetType="CalendarDayButton">
                                    <Style.Resources>
                                        <ViewModels:DateTimesToBoolConverter x:Key="DateTimesToBoolConverter"/>
                                    </Style.Resources>
                                    <Setter Property="IsHitTestVisible" Value="True"/>
                                    <Setter Property="Opacity" Value="1"/>
                                    <Style.Triggers>
                                        <DataTrigger Value="True">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource DateTimesToBoolConverter}">
                                                    <Binding Path="DataContext.DatesToBeDisabled" RelativeSource="{RelativeSource AncestorType=DatePicker}" />
                                                    <Binding Path="." />
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="IsHitTestVisible" Value="false" />
                                            <Setter Property="Opacity" Value="0"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DatePicker.CalendarStyle>
                
            </DatePicker>
            <Label Content="Date of return: "/>
            <DatePicker DisplayDateStart="{Binding StartDate}"
                DisplayDateEnd="{Binding EndDate}"
                IsEnabled="{Binding ArrivalIsSet}"        
                SelectedDate="{Binding SelectedEndDate, Mode=TwoWay}">
                <DatePicker.CalendarStyle>
                    <Style TargetType="{x:Type Calendar}">
                        <Setter Property="CalendarDayButtonStyle">
                            <Setter.Value>
                                <Style TargetType="{x:Type CalendarDayButton}">
                                    <Style.Resources>
                                        <ViewModels:DateTimesToBoolConverter x:Key="DateTimesToBoolConverter"/>
                                    </Style.Resources>
                                    <Setter Property="IsHitTestVisible" Value="False"/>
                                    <Setter Property="Opacity" Value="0"/>
                                    <Style.Triggers>
                                        <DataTrigger Value="True">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource DateTimesToBoolConverter}">
                                                    <Binding Path="DataContext.DatesToBeEnabled" RelativeSource="{RelativeSource AncestorType={x:Type DatePicker}}" />
                                                    <Binding Path="." />
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="IsHitTestVisible" Value="True" />
                                            <Setter Property="Opacity" Value="1"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DatePicker.CalendarStyle>

            </DatePicker>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <Label Content="Transportation"/>
                <CheckBox IsChecked="{Binding IncludeTransport}" />
                <Label Content="Pool access"/>
                <CheckBox IsChecked="{Binding IncludePool}"/>
                <Label Content="Breakfast"/>
                <CheckBox IsChecked="{Binding IncludeBreakfast}"/>
                <Label Content="All Inclusive"/>
                <CheckBox IsChecked="{Binding IncludeAll}"/>
            </StackPanel>
            <Label Content="Total Amount: " />
            <TextBlock Text="{Binding TotalAmount}"/>
            <Button  Content="Make Reservation"  Command="{Binding MakeReservationCommand}"/>
            
        </StackPanel>

    </Grid>
</UserControl>
